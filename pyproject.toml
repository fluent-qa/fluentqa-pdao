# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "qpydao"
version = "0.1.0"
description = "Awesome `fluentqa_pdao` is a Python cli/package "
readme = "README.md"
authors = ["fluent-qa <hello@fluent-qa.com>"]
repository = "https://github.com/fluent-qa/fluentqa-pdao"
homepage = "https://github.com/fluent-qa/fluentqa-pdao"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Programming Language :: Python :: 3",
]
packages = [
    { include = "qpydao", from="src"},
]

[tool.poetry.dependencies]
python = "^3.10"
alembic = "^1.10.4"
sqlmodel = "^0.0.10"
#qpybase = { git = "https://github.com/fluent-qa/fluentqa-pybase.git", branch = "main" }

[tool.poetry.dev-dependencies]
pytest = "^7.4.0"
allure-pytest = "^2.10.0"
pre-commit = "^3.3.2"
isort = {extras = ["colors"], version = "^5.11.4"}
darglint = "^1.8.1"
pytest-html = "^4.0.2"
coverage = "^7.2.7"
coverage-badge = "^1.1.0"
black = "^23.3.0"
pytest-cov = "^4.1.0"

[tool.black]
# https://github.com/psf/black
target-version = ["py310"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 310
line_length = 88
known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true
force_single_line = true
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
src_paths = ["src", "tests"]
extend_skip = ["setup.py"]

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.10
pretty = true
show_traceback = true
color_output = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "qpydao"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
